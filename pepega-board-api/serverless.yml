service: pepega-board-api

custom:
  secrets: ${file(secrets.json)}
  dynamodb:
    # local dynamodb instance for development
    stages:
      - dev
    start:
      port: 8000
      inMemory: false
      heapInitial: 200m
      heapMax: 1g
      dbPath: /var/tmp/dynamodb/
      migrate: true
      seed: true
      convertEmptyValues: true

provider:
  name: aws
  runtime: nodejs16.x
  region: us-west-1
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - "dynamodb:PutItem"
            - "dynamodb:GetItem"
            - "dynamodb:DeleteItem"
            - "dynamodb:Query"
            - "dynamodb:Scan"
          Resource:
            # will eventually replace this wildcard
            - "*"
            #- { "Fn::GetAtt": ["PepegaBoardTable", "Arn"] }
  environment:
    JWT_SECRET: ${self:custom.secrets.JWT_SECRET}

functions:
  register:
    handler: src/functions/auth.register
    events:
      - http:
          path: pepega-board-api/register
          method: post
  login:
    handler: src/functions/auth.login
    events:
      - http:
          path: pepega-board-api/login
          method: post
  check-auth:
    handler: src/functions/auth.checkAuth
    events:
      - http:
          path: pepega-board-api/check-auth
          method: get
  create-post:
    handler: src/functions/post.createPost
    events:
      - http:
          path: pepega-board-api/create-post
          method: post
  get-posts:
    handler: src/functions/post.getPosts
    events:
      - http:
          path: pepega-board-api/get-posts
          method: get
  get-posts-from-user:
    handler: src/functions/post.getPostsFromUser
    events:
      - http:
          path: pepega-board-api/get-posts-from-user
          method: get
  reply:
    handler: src/functions/post.reply
    events:
      - http:
          path: pepega-board-api/reply
          method: post
  get-thread:
    handler: src/functions/post.getThread
    events:
      - http:
          path: pepega-board-api/get-thread/{id}
          method: get
          request:
            parameters:
              paths:
                id: true

plugins:
  - serverless-esbuild
  #- serverless-plugin-typescript # esbuild is faster
  - serverless-dynamodb-local
  - serverless-offline

resources:
  Resources:
    PepegaBoardTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: pepega-board
        ProvisionedThroughput:
          ReadCapacityUnits: 4
          WriteCapacityUnits: 4
        AttributeDefinitions:
          - AttributeName: PK
            AttributeType: S
          - AttributeName: SK
            AttributeType: S
          - AttributeName: username
            AttributeType: S
          - AttributeName: entity
            AttributeType: S
          - AttributeName: owner
            AttributeType: S
          - AttributeName: time
            AttributeType: N
        KeySchema:
          - AttributeName: PK
            KeyType: HASH
          - AttributeName: SK
            KeyType: RANGE
        GlobalSecondaryIndexes:
          - IndexName: username-index
            KeySchema:
              - AttributeName: username
                KeyType: HASH
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 2
              WriteCapacityUnits: 2
          - IndexName: entity-time-index
            KeySchema:
              - AttributeName: entity
                KeyType: HASH
              - AttributeName: time
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 2
              WriteCapacityUnits: 1
          - IndexName: owner-time-index
            KeySchema:
              - AttributeName: owner
                KeyType: HASH
              - AttributeName: time
                KeyType: RANGE
            Projection:
              ProjectionType: ALL
            ProvisionedThroughput:
              ReadCapacityUnits: 2
              WriteCapacityUnits: 1
